# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew customTest 
    - name: Notify Slack on failure
      if: ${{ failure() }}
      uses: 8398a7/action-slack@v2.6.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        status: ${{ job.status }}
        message: |
          Job: ${{ github.job }}
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Event: ${{ github.event_name }}
          Branch: ${{ github.ref }}
    - name: Prevent merge on failure
      if: ${{ failure() }}
      run: echo "::set-output name=mergeable::false"
    - name: Update pull request mergeability status
      if: always()
      run: |
        if [ "${{ steps.prevent_merge.outputs.mergeable }}" == "false" ]; then
          echo "The pull request contains failed tests. Merging is not allowed."
          exit 1
        fi
    - name: Comment on pull request
      if: always()
      uses: actions/github-script@v4
      with:
        script: |
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pullRequest.number,
            body: 'The tests have completed. You can find the status in the workflow logs.'
          });
